{"version":3,"file":"static/js/630.f1297c9c.chunk.js","mappings":"mPAEaA,EAAgB,mCAAG,WAAMC,GAAN,uFACPC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,YAErB,CACEE,OAAQ,MACRC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAPc,cACxBC,EADwB,yBAYvBA,GAZuB,2CAAH,sD,SCEhBC,EAAO,WAClB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAAUC,OAAOH,GACvB,GAAwBI,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAiB,mCAAG,WAAMR,GAAN,gGAEKX,EAAiBW,GAFtB,OAEhBS,EAFgB,OAGtBL,EAAQK,GAHc,sEAMtBH,GAAa,GANS,0EAAH,sDASvBE,EAAkBR,EAEnB,GAAE,CAACF,IAEJ,IAAMY,EAAa,SAAAC,GACjB,OAAqB,OAAjBA,QAA0CC,IAAjBD,EACpB,+EAGH,sCAAN,OAA6CA,EAC9C,EAED,OACE,4BACE,iCACCE,QAAQC,IAAIX,IACXE,IACA,wBACGF,EAAKY,KAAKZ,KAAKa,KACd,YAA2D,IAAxDC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,UAAWP,EAAsC,EAAtCA,aAAcb,EAAwB,EAAxBA,GAAIqB,EAAoB,EAApBA,cACpC,OACE,2BACE,gBAAKC,IAAKV,EAAWC,GAAeU,IAAI,QAAQC,MAAM,SACtD,uBAAIL,GAAQE,KACZ,uCAAeD,OAHRpB,EAMZ,QAMZ,C","sources":["components/Api/getMovieCastbyId.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const getMovieCastbyId = async movieID => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${movieID}/credits`,\r\n    {\r\n      method: 'get',\r\n      params: {\r\n        api_key: '63b14a4f04fca1cccc4d7c2b70917b7d',\r\n        language: 'en-US',\r\n      },\r\n    }\r\n  );\r\n\r\n  return response;\r\n};\r\n\r\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=63b14a4f04fca1cccc4d7c2b70917b7d&language=en-US\r\n","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { getMovieCastbyId } from 'components/Api/getMovieCastbyId';\r\n\r\nexport const Cast = () => {\r\n  const { id } = useParams();\r\n  const movieId = Number(id);\r\n  const [cast, setCast] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const getMovieCastbyId2 = async movieId => {\r\n      try {\r\n        const movieDetails = await getMovieCastbyId(movieId);\r\n        setCast(movieDetails);\r\n      } catch (error) {\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getMovieCastbyId2(movieId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  const setProfile = profile_path => {\r\n    if (profile_path === null || profile_path === undefined) {\r\n      return 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg';\r\n    }\r\n\r\n    return `https://www.themoviedb.org/t/p/w500${profile_path}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>CAST</h1>\r\n      {console.log(cast)}\r\n      {!isLoading && (\r\n        <ul>\r\n          {cast.data.cast.map(\r\n            ({ name, character, profile_path, id, original_name }) => {\r\n              return (\r\n                <li key={id}>\r\n                  <img src={setProfile(profile_path)} alt=\"actor\" width=\"100\" />\r\n                  <p>{name || original_name}</p>\r\n                  <p>Character: {character}</p>\r\n                </li>\r\n              );\r\n            }\r\n          )}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["getMovieCastbyId","movieID","axios","method","params","api_key","language","response","Cast","id","useParams","movieId","Number","useState","cast","setCast","isLoading","setIsLoading","useEffect","getMovieCastbyId2","movieDetails","setProfile","profile_path","undefined","console","log","data","map","name","character","original_name","src","alt","width"],"sourceRoot":""}