{"version":3,"file":"static/js/127.584ed8c8.chunk.js","mappings":"sPAEaA,EAAe,mCAAG,WAAMC,GAAN,uFACNC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,YAErB,CACEE,OAAQ,MACRC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAPa,cACvBC,EADuB,yBAYtBA,GAZsB,2CAAH,sD,SCEfC,EAAU,WACrB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAAUC,OAAOH,GACvB,GAA8BI,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAmB,mCAAG,WAAMR,GAAN,gGAEGX,EAAgBW,GAFnB,OAElBS,EAFkB,OAGxBL,EAAWK,GAHa,sEAMxBH,GAAa,GANW,0EAAH,sDASzBE,EAAoBR,EAErB,GAAE,CAACF,KAGF,0BACIO,IACA,wBACmC,IAAhCF,EAAQO,KAAKC,QAAQC,OACpBT,EAAQO,KAAKC,QAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASjB,EAAS,EAATA,GAC3C,OACE,2BACE,oCAAYgB,MACZ,uBAAIC,MAFGjB,EAKZ,KAED,yEAMX,C","sources":["components/Api/getMovieReviews.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const getMovieReviews = async movieID => {\r\n  const response = await axios.get(\r\n    `https://api.themoviedb.org/3/movie/${movieID}/reviews`,\r\n    {\r\n      method: 'get',\r\n      params: {\r\n        api_key: '63b14a4f04fca1cccc4d7c2b70917b7d',\r\n        language: 'en-US',\r\n      },\r\n    }\r\n  );\r\n\r\n  return response;\r\n};\r\n\r\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=63b14a4f04fca1cccc4d7c2b70917b7d&language=en-US\r\n","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { getMovieReviews } from 'components/Api/getMovieReviews';\r\n\r\nexport const Reviews = () => {\r\n  const { id } = useParams();\r\n  const movieId = Number(id);\r\n  const [reviews, setReviews] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const getMovieReviewsById = async movieId => {\r\n      try {\r\n        const movieReviews = await getMovieReviews(movieId);\r\n        setReviews(movieReviews);\r\n      } catch (error) {\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getMovieReviewsById(movieId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {!isLoading && (\r\n        <ul>\r\n          {reviews.data.results.length !== 0 ? (\r\n            reviews.data.results.map(({ author, content, id }) => {\r\n              return (\r\n                <li key={id}>\r\n                  <h3>Athor: {author}</h3>\r\n                  <p>{content}</p>\r\n                </li>\r\n              );\r\n            })\r\n          ) : (\r\n            <p>We do not have any reviews for this movie.</p>\r\n          )}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["getMovieReviews","movieID","axios","method","params","api_key","language","response","Reviews","id","useParams","movieId","Number","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","getMovieReviewsById","movieReviews","data","results","length","map","author","content"],"sourceRoot":""}