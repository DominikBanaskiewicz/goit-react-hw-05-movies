{"version":3,"file":"static/js/322.055e25a7.chunk.js","mappings":"4NAEaA,EAAkB,mCAAG,oGACTC,EAAAA,EAAAA,IACrB,oEACA,CACEC,OAAQ,MACRC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAPgB,cAC1BC,EAD0B,yBAYzBA,GAZyB,2CAAH,qD,0BCElBC,EAAgB,WAC3B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAa,GAFC,SAGOZ,IAHP,OAIqB,KAD7Be,EAHQ,QAIHN,KAAKO,QAAQC,QAAcP,EAAQK,EAAON,KAAKO,SAJ5C,gDAMdE,QAAQC,IAAR,MANc,yBAQdP,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,KAGD,0BACE,yBACIH,GACAF,EAAKW,KAAI,SAAAC,GAAI,OACX,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAA1B,SAAiCF,EAAKG,SAD/BH,EAAKE,GADH,OAQtB,C","sources":["components/Api/Api.js","components/PopularMovies/PopularMovies.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const fetchGalleryimages = async () => {\r\n  const response = await axios.get(\r\n    'https://api.themoviedb.org/3/movie/popular?&language=en-US&page=1',\r\n    {\r\n      method: 'get',\r\n      params: {\r\n        api_key: '63b14a4f04fca1cccc4d7c2b70917b7d',\r\n        language: 'en-US',\r\n      },\r\n    }\r\n  );\r\n\r\n  return response;\r\n};\r\n\r\n//// 63b14a4f04fca1cccc4d7c2b70917b7d\r\n// https://api.themoviedb.org/3/movie/550?api_key=63b14a4f04fca1cccc4d7c2b70917b7d\r\n\r\n// popular https://api.themoviedb.org/3/movie/popular?api_key=63b14a4f04fca1cccc4d7c2b70917b7d&language=en-US&page=1\r\n","import { fetchGalleryimages } from 'components/Api/Api';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const PopularMovies = () => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getVideos = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const movies = await fetchGalleryimages();\r\n        if (movies.data.results.length !== 0) setData(movies.data.results);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getVideos();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {!isLoading &&\r\n          data.map(elem => (\r\n            <li key={elem.id}>\r\n              <Link to={`/movies/${elem.id}`}>{elem.title}</Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["fetchGalleryimages","axios","method","params","api_key","language","response","PopularMovies","useState","data","setData","isLoading","setIsLoading","useEffect","getVideos","movies","results","length","console","log","map","elem","to","id","title"],"sourceRoot":""}